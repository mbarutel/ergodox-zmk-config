#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1700
#define BASE 0
#define NAV 1
#define MOUSE 2
#define MEDIA 3
#define NUM 4
#define SYM 5
#define FUN 6

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        /* tdc: tap_dance_copy_cut { */
        /*     compatible = "zmk,behavior-tap-dance"; */
        /*     #binding-cells = <0>; */
        /*     tapping-term-ms = <200>; */
        /*     bindings = <&kp LC(C)>, <&kp LC(X)>; */
        /* }; */
        /* tdp: tap_dance_paste_select { */
        /*     compatible = "zmk,behavior-tap-dance"; */
        /*     #binding-cells = <0>; */
        /*     tapping-term-ms = <200>; */
        /*     bindings = <&kp LC(V)>, <&kp LC(A)>; */
        /* }; */
        fht: fast_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
        };
        /* mht: medium_hold_tap { */
        /*     compatible = "zmk,behavior-hold-tap"; */
        /*     #binding-cells = <2>; */
        /*     tapping-term-ms = <200>; */
        /*     quick-tap-ms = <0>; */
        /*     flavor = "balanced"; */
        /*     bindings = <&kp>, <&kp>; */
        /*     hold-trigger-on-release; */
        /* }; */
        slht: slow_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        sht: sticky_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&sk>;
        };
        lmd: layer_modifier {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };
        hm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-on-release;
        };
        // hml: home_row_mod_left {
        //     compatible = "zmk,behavior-hold-tap";
        //     #binding-cells = <2>;
        //     flavor = "balanced";
        //     require-prior-idle-ms = <125>;
        //     tapping-term-ms = <250>;
        //     quick-tap-ms = <150>;
        //     bindings = <&kp>, <&kp>;
        //     // hold-trigger-key-positions = <36 37 38 39>; // List of keys on the rigt side of the keyboard */
        //     hold-trigger-on-release;
        // };
        // hmr: home_row_mod_right {
        //     compatible = "zmk,behavior-hold-tap";
        //     #binding-cells = <2>;
        //     flavor = "balanced";
        //     require-prior-idle-ms = <125>;
        //     tapping-term-ms = <280>;
        //     quick-tap-ms = <175>;
        //     bindings = <&kp>, <&kp>;
        //     // hold-trigger-key-positions = <33 32 31 30>; // List of keys on the left side of the keyboard */
        //     hold-trigger-on-release;
        // };
    };

	keymap {
		compatible = "zmk,keymap";
		base {
			bindings = <
				&bootloader
				&kp CAPS          &kp N1            &kp N2         &kp N3          &kp N4       &kp N5 &kp C_MUTE     &kp PSCRN       &kp N6   &kp N7       &kp N8           &kp N9           &kp N0           &kp DEL
				&kp TAB           &kp Q             &kp W          &kp F           &kp P        &kp G  &none          &none           &kp J    &kp L        &kp U            &kp Y            &fht GRAVE APOS  &fht PIPE BSLH
				&fht LGUI ESC     &kp A             &kp R          &kp S           &kp T        &kp D                                 &kp H    &kp N        &kp E            &kp I            &kp O            &fht RGUI SEMI
				&kp RC(B)         &hm LGUI Z        &hm LALT X     &hm LCTRL C     &hm LSHFT V  &kp B  &none          &none           &kp K    &hm RSHFT M  &hm RCTRL COMMA  &hm RALT PERIOD  &hm RGUI SLASH   &kp RC(W)
				&fht LC(X) LC(C)  &kp LC(V)         &kp LC(A)      &mo MEDIA       &lmd MOUSE ESC                                         &lmd SYM BSPC &mo FUN    &none       &none    &none
				
                                                                  &sht LALT LALT &sht LCTRL LCTRL              &sht RCTRL RCTRL  &sht RALT RALT
                                                &lmd NAV SPACE  &sht LSHFT LSHFT  &none                  &none             &sht RSHFT RSHFT         &lmd NUM RETURN
                                                                                  &tog NUM                      &tog FUN
			>;
		};

		nav {
			bindings = <
                &bootloader
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &trans      &trans       &trans       &trans     &trans      &trans
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &trans      &trans       &trans       &trans     &trans  &trans
                &trans  &kp LGUI      &kp LALT      &kp LCTRL         &kp LSHFT       &kp BSPC                       &trans    &kp LEFT     &kp DOWN     &kp UP     &kp RIGHT   &trans
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &kp INSERT  &kp HOME     &kp PG_DN    &kp PG_UP  &kp END     &trans
                &trans  &trans        &trans        &trans            &trans                                                   &trans      &trans       &trans     &trans      &trans

                                                        &trans  &trans       &trans  &trans
                                                &trans  &trans  &trans       &trans  &trans  &trans
                                                                &trans       &trans
			>;
		};

		mouse {
			bindings = <
                &bootloader
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &trans      &trans          &trans          &trans        &trans           &trans
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &kp RC(RS(Z))  &kp RC(V)     &kp RC(C)      &kp RC(X)     &kp RC(Z)       &trans
                &trans  &kp LGUI      &kp LALT      &kp LCTRL         &kp LSHFT       &kp BSPC                       &kp RC(A)      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &trans      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                &trans  &trans        &trans        &trans            &trans                                                   &mkp MCLK       &trans          &trans        &trans           &trans

                                                        &trans  &trans       &trans  &trans
                                                &trans  &trans  &trans       &trans  &mkp RCLK  &mkp LCLK
                                                                &trans       &trans
			>;
		};

		media {
			bindings = <
                &bootloader
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &trans  &trans      &trans          &trans        &trans      &trans
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &trans  &trans      &trans          &trans        &trans      &trans
                &trans  &kp LGUI      &kp LALT      &kp LCTRL         &kp LSHFT       &kp BSPC                     &trans  &kp C_PREV  &kp C_VOL_DN    &kp C_VOL_UP  &kp C_NEXT  &trans
                &trans  &trans        &trans        &trans            &trans          &trans  &trans       &trans  &trans  &kp C_PP    &trans          &trans        &trans      &trans
                &trans  &trans        &trans        &trans            &trans                                               &kp PSCRN      &trans          &trans        &trans      &trans

                                                        &trans  &trans       &trans  &trans
                                                &trans  &trans  &trans       &trans  &trans  &trans
                                                                &trans       &trans
			>;
		};

		num {
			bindings = <
                &bootloader
                &trans  &trans     &trans  &trans  &trans  &trans    &trans       &trans  &trans  &trans     &trans     &trans    &trans   &trans
                &trans  &kp SLASH  &kp N7  &kp N8  &kp N9  &kp PLUS  &trans       &trans  &trans  &trans     &trans     &trans    &trans   &trans
                &trans  &kp STAR   &kp N4  &kp N5  &kp N6  &kp MINUS                      &kp BSPC  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI &trans
                &trans  &kp DOT    &kp N1  &kp N2  &kp N3  &kp EQUAL &trans       &trans  &trans  &trans     &trans     &trans    &trans   &trans
                &trans  &trans     &trans  &trans  &kp N0                                         &trans     &trans     &trans    &trans   &trans

                                                           &trans   &trans       &trans  &trans
                                                &trans  &trans  &trans       &trans  &trans  &trans
                                                                    &trans       &trans
			>;
		};

		sym {
			bindings = <
                &bootloader
                &trans  &trans     &trans    &trans     &trans     &trans    &trans       &trans  &trans  &trans     &trans     &trans    &trans   &trans 
                &trans  &kp LBKT   &kp AMPS  &kp STAR   &kp GRAVE  &kp RBKT  &kp GT       &trans  &trans  &trans     &trans     &trans    &trans   &trans 
                &trans  &kp SEMI   &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS                       &kp BSPC  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI &trans 
                &trans  &kp EQUAL  &kp EXCL  &kp AT     &kp HASH   &kp PIPE  &kp LT       &trans  &trans  &trans     &trans     &trans    &trans   &trans 
                &trans  &trans     &trans    &trans     &kp LPAR                                         &trans     &trans     &trans    &trans   &trans

                                                          &trans    &trans       &trans  &trans
                                                &kp RPAR  &kp MINUS    &trans       &trans  &trans  &trans
                                                                    &trans       &trans
			>;
		};

		fun {
			bindings = <
                &bootloader
                &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans     &trans     &trans    &trans   &trans  
                &trans  &kp F12  &kp F7  &kp F8  &kp F9 &trans  &trans       &trans  &trans  &trans     &trans     &trans    &trans   &trans  
                &trans  &kp F11  &kp F4  &kp F5  &kp F6 &trans                       &kp BSPC  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI &trans  
                &trans  &kp F10  &kp F1  &kp F2  &kp F3 &trans  &trans       &trans  &trans  &trans     &trans     &trans    &trans   &trans  
                &trans  &trans   &trans  &trans  &trans                                      &trans     &trans     &trans    &trans   &trans  

                                                        &trans  &trans       &trans  &trans
                                                &trans  &trans  &trans       &trans  &trans  &trans
                                                                &trans       &trans
			>;
		};
	};
};
