#define ZMK_MOUSE_DEFAULT_MOVE_VAL 900
#define LAYER_0 0
#define LAYER_1 1
#define LAYER_2 2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
  behaviors {
    tilesc: tilde_escape {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp ESC>, <&kp TILDE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    bacdel: back_del {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    bht: balanced_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <150>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
    };
    lht: layer_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&mo>, <&tog>;
    };
  };
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&tilesc          &kp NUMBER_1           &kp NUMBER_2            &kp NUMBER_3   &kp NUMBER_4    &kp NUMBER_5   &kp LC(B)            &kp PRINTSCREEN       &kp NUMBER_6    &kp NUMBER_7   &kp NUMBER_8 &kp NUMBER_9       &kp NUMBER_0        &bacdel
				&kp TAB          &kp Q                  &kp W                   &kp E          &kp R           &kp T          &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp Y           &kp U          &kp I        &kp O              &kp P               &kp BACKSLASH
				&kp CAPSLOCK     &kp A                  &kp S                   &kp D          &kp F           &kp G                                                     &kp H           &kp J          &kp K        &kp L              &kp SEMICOLON       &kp RIGHT_GUI
				&kp LS(LEFT_GUI) &kp Z                  &kp X                   &kp C          &kp V           &kp B          &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &kp N           &kp M          &kp COMMA    &kp PERIOD         &kp SLASH           &bht GRAVE SINGLE_QUOTE 
				&lht LAYER_1 LAYER_1     &kp LC(LS(LEFT_ARROW)) &kp RC(RS(RIGHT_ARROW)) &kp LEFT_ARROW &kp RIGHT_ARROW                                                                           &kp DOWN_ARROW &kp UP_ARROW &kp RC(LEFT_ARROW) &kp RC(RIGHT_ARROW) &lht LAYER_1 LAYER_1
				                                                                                               &kp LEFT_ALT   &bht LEFT_CONTROL LC(LEFT_ALT)     &bht RIGHT_CONTROL RC(RIGHT_ALT)     &kp RIGHT_ALT
				                                                                               &kp SPACE       &kp LEFT_SHIFT &lht LAYER_2 LAYER_2 &lht LAYER_2 LAYER_2           &kp RIGHT_SHIFT &kp RETURN
				                                                                                                              &kp MINUS            &kp EQUAL
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&trans    &kp F1         &kp F2         &kp F3          &kp F4 &kp F5 &kp F6      &kp F7        &kp F8       &kp F9       &kp F10      &kp F11           &kp F12         &trans
				&trans    &msc SCRL_DOWN &mmv MOVE_UP   &msc SCRL_UP    &trans &trans &kp PAGE_UP &kp PAGE_DOWN &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &trans            &trans          &trans
				&trans    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans &trans                           &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &trans            &trans          &trans
				&trans    &msc SCRL_LEFT &trans         &msc SCRL_RIGHT &trans &trans &kp HOME    &kp END       &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &trans            &trans          &trans
				&trans    &trans         &trans         &trans          &trans                                               &kp NUMBER_0 &kp C_MUTE   &kp C_VOLUME_DOWN &kp C_VOLUME_UP &trans
				                                                               &trans &trans      &trans        &trans
				                                                        &trans &trans &trans      &trans        &trans       &trans
				                                                                      &mkp RCLK   &mkp LCLK
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&trans &trans &trans &trans &trans &trans          &trans       &trans      &trans         &trans         &trans       &trans          &trans &trans
				&trans &trans &trans &trans &trans &trans          &trans       &trans      &trans         &trans         &trans       &trans          &trans &trans
				&trans &trans &trans &trans &trans &trans                                   &kp LEFT_ARROW &kp DOWN_ARROW &kp UP_ARROW &kp RIGHT_ARROW &trans &trans
				&trans &trans &trans &trans &trans &trans          &kp LS(HOME) &kp RS(END) &trans         &trans         &trans       &trans          &trans &trans
				&trans &trans &trans &trans &trans                                                         &trans         &trans       &trans          &trans &trans
				                                   &mt LC(X) LC(C) &kp LC(V)    &kp RC(S)   &kp RC(Z)
				                            &kp F9 &kp F5          &trans       &trans      &kp F10        &kp F11
				                                                   &trans       &trans
			>;
		};
	};
};
